name: CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

permissions:
  contents: read
  security-events: write

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest
          args: --timeout=5m

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Run gosec Security Scanner
        run: |
          go install github.com/securego/gosec/v2/cmd/gosec@latest
          # Run gosec and display results in console
          gosec -no-fail -fmt json -out gosec-results.json ./... || true
          gosec -no-fail -fmt text ./... || true
          
          # Generate SARIF for upload (may have compatibility issues)
          gosec -no-fail -fmt sarif -out gosec-results.sarif ./... || true

      - name: Upload gosec results as artifact
        uses: actions/upload-artifact@v4
        with:
          name: gosec-results-${{ github.run_id }}
          path: gosec-results.json
        if: always()

      - name: Upload gosec SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: gosec-results.sarif
        continue-on-error: true
        if: always()

      - name: Run govulncheck
        run: |
          go install golang.org/x/vuln/cmd/govulncheck@latest
          govulncheck ./...

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
        if: always()

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        go-version: ['1.24.x']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: true

      - name: Run tests
        run: go test -v -race -coverprofile=coverage.out -covermode=atomic ./...

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.out
          flags: ${{ matrix.os }}
          fail_ci_if_error: false
        if: matrix.os == 'ubuntu-latest'
        continue-on-error: true

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, security, test]
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
          - os: windows
            arch: amd64
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Build
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
          CGO_ENABLED: 0
        run: |
          go build -v -o build/paperless-uploader-${{ matrix.os }}-${{ matrix.arch }} ./cmd/paperless-uploader

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: paperless-uploader-${{ matrix.os }}-${{ matrix.arch }}
          path: build/paperless-uploader-${{ matrix.os }}-${{ matrix.arch }}*
          retention-days: 7
